from typing import List, Optional
from app.domain.models import User
from app.domain.ports import UserRepositoryPort

class FakePostgresUserRepo(UserRepositoryPort):
    def __init__(self):
        self._fake_db = []

    def create(self, user: User) -> User:
        print(f"Simulando: salvando {user} no PostgreSQL...")
        self._fake_db.append(user)
        return user

    def get_all(self):
        print("Simulando: listando usu치rios no PostgreSQL...")
        return self._fake_db

    def get_by_id(self, user_id: int):
        print(f"Simulando: pegando usu치rio {user_id} no PostgreSQL...")
        for user in self._fake_db:
            if user.id == user_id:
                return user
        return None

    def update(self, user_id: int, user: User):
        print(f"Simulando: atualizando usu치rio {user_id} no PostgreSQL...")
        for idx, existing in enumerate(self._fake_db):
            if existing.id == user_id:
                self._fake_db[idx] = user
                return user
        return None

    def delete(self, user_id: int):
        print(f"Simulando: deletando usu치rio {user_id} no PostgreSQL...")
        for idx, existing in enumerate(self._fake_db):
            if existing.id == user_id:
                del self._fake_db[idx]
                return True
        return False
